# SPDX-License-Identifier: MIT

name: Build RK3229 Box OpenWrt Firmware

on:
  workflow_dispatch:
  push:
    branches:
      - rk3229-box

jobs:
  build_openwrt:
    name: Build OpenWrt for RK3229 (ARMv7)
    runs-on: ubuntu-latest
    env:
      CONFIG_URL: "https://raw.githubusercontent.com/pitekkate/AutoBuild-OpenWrt-rk3229-box/refs/heads/master/Rk3229-box.config" 

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Basic Environment
        run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php || true
          sudo apt-get purge -y azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* snap* || true
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential libncurses5-dev flex bison libssl-dev python3 python3-pip rsync unzip zip \
            git wget curl bc kmod patch make gcc g++ zlib1g-dev libzstd-dev \
            libncurses5-dev libreadline-dev libssl-dev libelf-dev liblzma-dev \
            libudev-dev libusb-1.0-0-dev libcurl4-openssl-dev

      - name: Clone Source Code
        run: |
          git clone --depth=1 --branch rk3229-box https://github.com/pitekkate/lede-rk3229-box  openwrt

      - name: Update & Install Feeds
        working-directory: ./openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Download and Apply .config
        working-directory: ./openwrt
        run: |
          curl -sL "$CONFIG_URL" -o .config
          cat .config

      - name: Generate Configuration
        working-directory: ./openwrt
        run: |
          make defconfig
          echo "CONFIG_TARGET_rockchip_armv7=y" >> .config
          echo "CONFIG_TARGET_rockchip_armv7_DEVICE_rk3229-evb=y" >> .config
          make oldconfig

      - name: Download Packages
        working-directory: ./openwrt
        run: |
          make download -j$(nproc)

      - name: Build Firmware with Log Output
        id: build_firmware
        continue-on-error: true
        working-directory: ./openwrt
        run: |
          echo "Starting build for RK3229 (ARMv7)"
          make -j$(nproc) V=s 2>&1 | tee ../build.log

          echo "======================="
          echo "Build artifacts:"
          echo "======================="
          find ./bin/targets/rockchip/armv7/ -type f -name '*.img' -o -name '*.bin' || true
          echo "======================="

      - name: Check Build Status
        id: check_build
        shell: bash
        run: |
          if grep -q 'make[1-9][0-9]*: ***' ../build.log; then
            echo "::set-output name=status::failed"
            exit 1
          else
            echo "::set-output name=status::success"
          fi

      - name: Prepare Artifact
        if: success()
        working-directory: ./openwrt
        run: |
          mkdir -p ../artifact
          IMG_FILE=$(find ./bin/targets/rockchip/armv7/ -type f -name '*-sysupgrade.img' -o -name '*.img' | head -1)

          if [ -f "$IMG_FILE" ]; then
            echo "Firmware found: $IMG_FILE"
            cp $IMG_FILE ../artifact/
          else
            echo "Error: Firmware not found!"
            find ./bin/targets/ -type f
            exit 1
          fi

      - name: Upload Firmware
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: RK3229_OpenWrt_Firmware
          path: ./artifact/*.img

      - name: Upload Error Log (if failed)
        if: failure() || steps.check_build.outputs.status == 'failed'
        uses: actions/upload-artifact@v4
        with:
          name: build-error-log
          path: ../build.log

      - name: Upload Full Build Log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-build-log
          path: ../build.log
